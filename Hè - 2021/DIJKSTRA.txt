#include<bits/stdc++.h>
#define nmax 100000 + 5
#define ll long long
#define fo(i,a,b) for(ll i=a;i<=b;i++)
#define fod(i,a,b) for(ll i=b;i>=a;i--)
#define li pair<long long,int>
#define ii pair<int,int>
#define fi first
#define se second
const ll  oo = 1e18;
const ll mod = 1e9+7;
using namespace std;
int n, m, s, t;
vector<ii> a[nmax];
ll d[nmax];
int mark[nmax];
int trace[nmax];
priority_queue<li, vector<li>, greater<li>> pq;
int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);
    cin>>n>>m>>s>>t;
    fo(i,1,m)
    {
        ll u, v, w, dir;
        cin>>u>>v>>w>>dir;
        if (dir==1)
            a[u].push_back({v,w});
        else
        {
            a[u].push_back({v,w});
            a[v].push_back({u,w});
        }
    }

    fo(i,1,n)
        d[i] = oo;
    d[s] = 0;
    fo(i,1,n)
        mark[i] = 0;
    pq.push({d[s], s});

    while(pq.size() > 0)
    {
        li node = pq.top();
        pq.pop();
        int u = node.se;
        if (mark[u] == 1) continue;

        mark[u] = 1;
        for(int i=0;i<a[u].size();i++)
        {
            int v = a[u][i].fi;
            int w = a[u][i].se;
            if(d[u]+w<d[v])
            {
                d[v] = d[u] + w;
                trace[v] = u;
                pq.push({d[v], v});
            }
        }
    }
     if (d[t]==oo)
        cout<<-1;
    else
        cout<<d[t];
}